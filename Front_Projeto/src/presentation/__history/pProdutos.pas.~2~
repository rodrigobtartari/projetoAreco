unit pProdutos;

interface

uses
  Winapi.Windows,
  Winapi.Messages,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Vcl.Graphics,
  Vcl.Controls,
  Vcl.Forms,
  Vcl.Dialogs,
  Data.DB,
  Vcl.StdCtrls,
  Vcl.Grids,
  Vcl.DBGrids,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Option,
  FireDAC.Stan.Param,
  FireDAC.Stan.Error,
  FireDAC.DatS,
  FireDAC.Phys.Intf,
  FireDAC.DApt.Intf,
  FireDAC.Comp.DataSet,
  FireDAC.Comp.Client,
  bProdutos,
  pOperaProduto;

type
  TfrmProdutos = class(TForm)
    dbGradeProdutos: TDBGrid;
    btAtualizar: TButton;
    lbListagem: TLabel;
    GroupBox1: TGroupBox;
    btCadastro: TButton;
    btEditar: TButton;
    btExcluir: TButton;
    procedure btAtualizarClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);

  private
    { Private declarations }
    bProd : TProdutos;
    mProduto : TfrmOperacoes;
    procedure criaCadOuEditaProd(funcao : TObject);
  public
    { Public declarations }
  end;

var
  frmProdutos: TfrmProdutos;

implementation

{$R *.dfm}

procedure TfrmProdutos.btAtualizarClick(Sender: TObject);
begin
  bProd.atualizaRegistros;
end;

procedure TfrmProdutos.FormCreate(Sender: TObject);
begin
  bProd := TProdutos.Create;
end;

procedure TfrmProdutos.criaCadOuEditaProd(funcao: TObject);

var id,qtde : Integer;
    nome : string;
    valor : double;

begin
  try
    try
      // Cria o Objeto
      mProduto := TfrmOperacoes.Create(Nil);

      // De acordo com o Botão inicializa o form de operar produto de forma diferente
      if (funcao as TButton).Name = 'btCadastro' then begin

        mProduto.Caption      := 'Cadastrar Produto';
        mProduto.lbID.Visible := False;
        mProduto.edID.Visible := False;
      end else if (funcao as TButton).Name = 'btEditar' then begin

        // Não deixo alterar a ID do Produto
        mProduto.lbID.Enabled := False;

        mProduto.Caption           := 'Editar Produto';

      end;

      mProduto.ShowModal;

      if mProduto.ModalResult = 0 then begin
        exit;
      end else begin

          ShowMessage('Gravado/Alterado com Sucesso.');

      end;
    except
      raise Exception.Create('Erro ao Criar/Alterar produto.');
    end;
  finally
    // libera o objeto
    mProduto.Free;
  end;
end;


end.
